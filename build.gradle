allprojects{
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'
}   

configurations {
    jacocoAgent
}

repositories {
    mavenCentral()
    maven {
        url "http://maven.restlet.com"
    }
}

dependencies {
    compile group: 'org.apache.cassandra', name: 'cassandra-all', version: '2.2.2'
    compile group: 'org.apache.solr', name: 'solr-core', version: '5.3.1'
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.11'
    jacocoAgent 'org.jacoco:org.jacoco.agent:0.7.9'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

// following task useful for copying jacoco agent jar to java classpath for test coverage
task unzipJacocoAgent {
    doLast {
        def jacocoAgentPath = configurations.jacocoAgent.resolve().first()
        copy {
            from zipTree(jacocoAgentPath)
            into "$buildDir/jacocoagent/unpacked"
        }
        copy {
            from "$buildDir/jacocoagent/unpacked/jacocoagent.jar"
            into "$buildDir/jacocoagent"
        }
        delete "$buildDir/jacocoagent/unpacked"
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

build.dependsOn unzipJacocoAgent
test.dependsOn unzipJacocoAgent